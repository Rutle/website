<div class="ui container inner-content-wrap">
    <div class="ui small inverted top attached pointing menu" id="dashboard_menu">
        <a class="item active" data-tab="current_projects">
            All
        </a>
        <a class="item" data-tab="search">
            Search
        </a>
    </div>
    <div class="ui bottom attached tab segment active inner-content-stretch" data-tab="current_projects">
        <div class="ui center aligned basic segment">
            <h2 class="ui header">All currently found sales</h2>
        </div>
        <div class="ui stackable grid">
            <div class="row">
                <div class="five wide column" style="flex:1;">
                    <div class="ui selection dropdown" id="store_dpn">
                        <div class="default text">Select store</div>
                        <i class="dropdown icon"></i>
                    </div>
                    <div class="ui selection dropdown" id="category_dpn">
                        <div class="default text">Select category</div>
                        <i class="dropdown icon"></i>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="sixteen wide column">
                    <div class="ui vertical segment">
                        {{> saletable}}
                    </div>

                </div>
            </div>
        </div>

    </div>

    <div class="ui bottom attached tab segment inner-content-stretch" data-tab="categories" style="margin-bottom: 5rem!important;" id="categories_tab">
        <div class="ui sub header">Stores</div>
    </div>
    <div class="ui bottom attached tab segment inner-content-stretch" data-tab="search" style="margin-bottom: 5rem!important;">
        <h3 class="ui header">AJAX Tab third</h3>
    </div>
</div>
<script>
    $(function () {
        function storageAvailable(type) {
            try {
                var storage = window[type],
                    x = '__storage_test__';
                storage.setItem(x, x);
                storage.removeItem(x);
                return true;
            }
            catch (e) {
                return e instanceof DOMException && (
                    // everything except Firefox
                    e.code === 22 ||
                    // Firefox
                    e.code === 1014 ||
                    // test name field too, because code might not be present
                    // everything except Firefox
                    e.name === 'QuotaExceededError' ||
                    // Firefox
                    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
                    // acknowledge QuotaExceededError only if there's something already stored
                    storage.length !== 0;
            }
        }
        if (storageAvailable('sessionStorage')) {
            // Yippee! We can use localStorage awesomeness
            if (!sessionStorage.getItem('salesData')) {
                // No data has been stored to sessionStorage yet.
                let storeSalesData = {{{ sessionData }}};
                let storeCategories = {{{ storeCategories }}}

                // Sales data
                sessionStorage.setItem('salesData', JSON.stringify(storeSalesData));
                // Unique categories
                sessionStorage.setItem('storeCategories', JSON.stringify(storeCategories));
            } else {
            // Data has already been stored before.
            }
        }
        else {
            // Too bad, no localStorage for us
        }
    });
</script>